// <auto-generated />
using System;
using MacBot.ConsoleApp.Repository.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MacBot.ConsoleApp.Migrations
{
    [DbContext(typeof(BotDbContext))]
    partial class BotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1");

            modelBuilder.Entity("MacBot.ConsoleApp.Models.BotMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLast")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BotMessages");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.BotUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ActiveRole")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeckId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Deck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Read")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.InviteCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("InviteCodes");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Session", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("TEXT");

                    b.HasKey("SessionId");

                    b.HasIndex("ClientId");

                    b.HasIndex("MasterId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.SessionCard", b =>
                {
                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CardId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsShown")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionId", "CardId");

                    b.HasIndex("CardId");

                    b.ToTable("SessionCards");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.SessionParameters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CardsToShowCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeckId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SessionParameters");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Card", b =>
                {
                    b.HasOne("MacBot.ConsoleApp.Models.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckId");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.InviteCode", b =>
                {
                    b.HasOne("MacBot.ConsoleApp.Models.BotUser", "Master")
                        .WithMany()
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Master");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Session", b =>
                {
                    b.HasOne("MacBot.ConsoleApp.Models.BotUser", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacBot.ConsoleApp.Models.BotUser", "Master")
                        .WithMany("Sessions")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Master");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.SessionCard", b =>
                {
                    b.HasOne("MacBot.ConsoleApp.Models.Card", "Card")
                        .WithMany("SessionCards")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MacBot.ConsoleApp.Models.Session", "Session")
                        .WithMany("ChoosenCards")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.BotUser", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Card", b =>
                {
                    b.Navigation("SessionCards");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Deck", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("MacBot.ConsoleApp.Models.Session", b =>
                {
                    b.Navigation("ChoosenCards");
                });
#pragma warning restore 612, 618
        }
    }
}
